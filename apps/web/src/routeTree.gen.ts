/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SessionsRoute } from './routes/sessions'
import { Route as ObservabilityRoute } from './routes/observability'
import { Route as IndexRoute } from './routes/index'
import { Route as ConfigRoute } from './routes/config'
import { Route as ProfilesProfileIdRoute } from './routes/profiles/$profileId'

// Create/Update Routes

const SessionsRouteWithChildren = SessionsRoute
const ObservabilityRouteWithChildren = ObservabilityRoute
const IndexRouteWithChildren = IndexRoute
const ConfigRouteWithChildren = ConfigRoute
const ProfilesProfileIdRouteWithChildren = ProfilesProfileIdRoute

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteWithChildren
      parentRoute: typeof rootRoute
    }
    '/config': {
      id: '/config'
      path: '/config'
      fullPath: '/config'
      preLoaderRoute: typeof ConfigRouteWithChildren
      parentRoute: typeof rootRoute
    }
    '/observability': {
      id: '/observability'
      path: '/observability'
      fullPath: '/observability'
      preLoaderRoute: typeof ObservabilityRouteWithChildren
      parentRoute: typeof rootRoute
    }
    '/profiles/$profileId': {
      id: '/profiles/$profileId'
      path: '/profiles/$profileId'
      fullPath: '/profiles/$profileId'
      preLoaderRoute: typeof ProfilesProfileIdRouteWithChildren
      parentRoute: typeof rootRoute
    }
    '/sessions': {
      id: '/sessions'
      path: '/sessions'
      fullPath: '/sessions'
      preLoaderRoute: typeof SessionsRouteWithChildren
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree - no caching to avoid HMR duplicates
// Keep a stable routeTree to avoid duplicate __root__ during HMR
// The router updates will replace children safely via router.update
declare global {
  // eslint-disable-next-line no-var
  var __APP_ROUTE_TREE__: any | undefined
}

export const routeTree =
  (globalThis as any).__APP_ROUTE_TREE__ ||
  ((globalThis as any).__APP_ROUTE_TREE__ = rootRoute.addChildren({
  IndexRouteWithChildren,
  ConfigRouteWithChildren,
  ObservabilityRouteWithChildren,
  ProfilesProfileIdRouteWithChildren,
  SessionsRouteWithChildren,
}))

/* prettier-ignore-end */
